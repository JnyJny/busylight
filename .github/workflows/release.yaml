name: Test and Publish

on:
  push:
    branches:
      - testing
    tags:
      - 'v*-test'
      - 'v[0-9]+.[0-9]+.[0-9]+'
  workflow_dispatch:

permissions:
  contents: write
  id-token: write
  pull-requests: read

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.11', '3.12', '3.13']

    steps:
      - uses: actions/checkout@v4

      - name: Install uv and set Python version.
        uses: astral-sh/setup-uv@v6
        with:
          version: "latest"
          python-version: ${{ matrix.python-version }}

      - name: Install libusb on Linux.
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libusb-1.0-0-dev libudev-dev

      - name: Run tests - ${{ matrix.python-version }} - ${{ matrix.os }}
        run: |
          uv run --all-extras pytest
    


  publish:
    name: Build & Publish
    needs: test
    if: |
      github.ref_type == 'tag' &&
      startsWith(github.ref, 'refs/tags/v') &&
      !endsWith(github.ref, '-test') &&
      success()
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/project/busylight-for-humans

    steps:
      - uses: actions/checkout@v4

      - name: Install uv and set Python version.
        uses: astral-sh/setup-uv@v6
        with:
          version: "latest"
          python-version: 3.13

      - name: Build package.
        run: |
          uv build

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  generate-changelog:
    name: Generate Changelog
    needs: publish
    if: |
      github.ref_type == 'tag' &&
      startsWith(github.ref, 'refs/tags/v') &&
      !endsWith(github.ref, '-test') &&
      success()
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 100  # Limit history fetch for performance
      - name: Auto-generate Changelog  
        uses: BobAnkh/auto-generate-changelog@v1.2.5  # Latest available version
        with:
          REPO_NAME: 'JnyJny/busylight'
          ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PATH: 'CHANGELOG.md'
          COMMIT_MESSAGE: 'docs(CHANGELOG): update release notes'
          TYPE: 'feat:Feature,fix:Bug Fixes,docs:Documentation,refactor:Refactor,perf:Performance Improvements'

  github-release:
    name: Create GitHub Release
    needs: publish
    if: |
      github.ref_type == 'tag' &&
      startsWith(github.ref, 'refs/tags/v') &&
      !endsWith(github.ref, '-test') &&
      success()
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 50  # Limit history for performance

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          python-version: 3.13

      - name: Build package
        run: |
          uv build

      - name: Generate release notes
        id: release_notes
        run: |
          # Get the tag name
          TAG_NAME=${GITHUB_REF#refs/tags/}
          
          # Get the previous tag (limit to recent tags for performance)
          PREVIOUS_TAG=$(git tag --sort=-version:refname | head -n 2 | tail -n 1 2>/dev/null || echo "")
          
          # Generate changelog with limited commits (last 50)
          if [[ -n "$PREVIOUS_TAG" && "$PREVIOUS_TAG" != "$TAG_NAME" ]]; then
            echo "## Changes since $PREVIOUS_TAG" >> release_notes.md
            echo "" >> release_notes.md
            git log --max-count=50 --pretty=format:"- %s (%h)" ${PREVIOUS_TAG}..${TAG_NAME} >> release_notes.md
          else
            echo "## Release $TAG_NAME" >> release_notes.md
            echo "" >> release_notes.md
            git log --max-count=20 --pretty=format:"- %s (%h)" >> release_notes.md
          fi
          
          # Add footer
          echo "" >> release_notes.md
          echo "---" >> release_notes.md
          echo "**Full Changelog**: https://github.com/JnyJny/busylight/compare/${PREVIOUS_TAG}...${TAG_NAME}" >> release_notes.md

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "dist/*"
          bodyFile: "release_notes.md"
          draft: false
          prerelease: false
          generateReleaseNotes: true
          token: ${{ secrets.GITHUB_TOKEN }}
          
