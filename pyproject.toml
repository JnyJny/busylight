[tool.poetry]
name = "busylight-for-humans"
version = "0.26.1"
description = "Control USB connected LED lights, like a human."
authors = ["JnyJny <erik.oshaughnessy@gmail.com>"]
license = "Apache-2.0"
readme = "README.md"
repository = "https://github.com/JnyJny/busylight.git"
packages = [ {include = "busylight"} ]

[tool.poetry.dependencies]
python = "^3.7"
bitvector-for-humans = "^0.14.0"
webcolors = "^1.11.1"
pyserial = "^3.5"
loguru = ">=0.6,<0.8"
typer = ">=0.7,<0.10"
fastapi = ">=0.95.2,<0.101.0"
hidapi = "^0.14.0"

[tool.poetry.extras]
webapi = ["fastapi", "uvicorn"]

[tool.poetry.dev-dependencies]
anyio = {extras = ["trio"], version = "^3.7.1"}

[tool.poetry.scripts]
busylight="busylight.__main__:cli"
busyserve="busylight.__main__:webcli"

[tool.poe.tasks]

# testing
_generate_coverage = "pytest --cov=./busylight --cov-report=html"
_open_report = "open htmlcov/index.html"
coverage = [ "_generate_coverage", "_open_report"]

mypy = "mypy --config-file pyproject.toml busylight"

# requirements

requirements = [
 { cmd = "poetry export -o requirements.txt" },
 { cmd = "git add requirements.txt" },
 { cmd = "git commit -m 'requirements.txt updated from poetry.lock'"},
]

# update version in pyproject

_patch_bump = "poetry version patch"
_minor_bump = "poetry version minor"
_major_bump = "poetry version major"

# add, commit, tag and commit updated pyproject

_add = "git add pyproject.toml"
_commit = {shell = "git commit -m `poetry version -s`"}
_tag = { shell = "git tag `poetry version -s`" }
_push = "git push --all"

_update_pyproject = ["_add", "_commit", "_tag", "_push"]

_patch_update = ["_patch_bump", "_update_pyproject"]
_minor_update = ["_minor_bump", "_update_pyproject"]
_major_update = ["_major_bump", "_update_pyproject"]

# publish

_publish = "poetry publish"

publish_patch = ["_patch_update", "_publish"]
publish_minor = ["_minor_update", "_publish"]
publish_major = ["_major_update", "_publish"]

publish = {ref = "publish_patch"}


# clean
[[tool.poe.tasks.clean]]
cmd = "rm -rf htmlcov dist busylight.egg-info *.log"


[tool.poetry.group.dev.dependencies]
pytest = "^7"
black = ">=22.12,<24.0"
pytest-cov = ">=3,<5"
mypy = ">=0.991,<1.5"
requests = "^2.28.1"
httpx = ">=0.23.2,<0.25.0"
pytest-mock = "^3.9.0"
poethepoet = "^0.19.0"

[tool.poetry.group.webapi.dependencies]
uvicorn = ">=0.20,<0.23"

[tool.pytest.ini_options]
addopts = "-p no:warnings"

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"

[mypy]
[mypy-webcolors]
ignore_missing_imports = true
[mypy-hid]
ignore_missing_imports = true
[mypy-fastapi]
ignore_missing_imports = true
[mypy-pydantic]
ignore_missing_imports = true
[mypy-uvicorn]
ignore_missing_imports = true
[mypy-loguru]
ignore_missing_imports = true
[mypy-bitvector]
ignore_missing_imports = true
[mypy-fastapi.responses]
ignore_missing_imports = true

